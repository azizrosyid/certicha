generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Program {
  id                  Int                   @id @default(autoincrement())
  name                String                @unique
  certificates        Certificate[]
  certificateTemplate CertificateTemplate[]
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
}

model CertificateTemplate {
  id               Int                @id @default(autoincrement())
  program          Program?           @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId        Int?
  metadataTemplate MetadataTemplate[]
  templateName     String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
}

model MetadataTemplate {
  id                    Int                  @id @default(autoincrement())
  key                   String
  value                 String
  certificateTemplate   CertificateTemplate? @relation(fields: [certificateTemplateId], references: [id], onDelete: Cascade)
  certificateTemplateId Int?
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
}

model Certificate {
  id              Int      @id @default(autoincrement())
  participant     String
  certificateLink String
  txHash          String
  chain           String
  issuedAt        DateTime @default(now())

  program   Program? @relation(fields: [programId], references: [id], onDelete: Cascade)
  programId Int?

  metadata  Metadata[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Metadata {
  id    Int    @id @default(autoincrement())
  key   String
  value String

  certificate   Certificate? @relation(fields: [certificateId], references: [id], onDelete: Cascade)
  certificateId Int?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}
